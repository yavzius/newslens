---
description: Core product features and implementation guidelines for NewsLens iOS app, including geo-tagging, context bubbles, collaborative coverage, AI moderation, and creator verification systems. Use this rule when implementing new features or modifying existing feature implementations.
globs: Features/**/*.swift,Models/**/*.swift,Services/**/*.swift,Views/**/*.swift,Controllers/**/*.swift
---
 # Product Features Configuration & Guidelines

## Core Features Overview

### 1. Geo-Tagging & Local Coverage
- Implementation Requirements:
  - CoreLocation integration for precise location tagging
  - Region-based content clustering
  - Location verification system
  - Geofencing capabilities for regional content discovery
  - Map visualization interface

### 2. Context Bubbles & Timeline Markers
- Implementation Requirements:
  - Interactive overlay system for video content
  - Data structure for timestamp-based markers
  - Context bubble rendering engine
  - Content management system for contextual information
  - API integration for real-time fact-checking

### 3. Collaborative Threaded Coverage
- Implementation Requirements:
  - Thread-based content structure
  - Multi-user contribution system
  - Version control for content updates
  - Collaborative editing permissions
  - Real-time content synchronization

### 4. AI Content Moderation & Misinformation Detection
- Implementation Requirements:
  - Machine learning model integration
  - Content scanning pipeline
  - Flag and review system
  - Automated content classification
  - Manual review interface for flagged content

### 5. Verified Creators System
- Implementation Requirements:
  - Verification badge system
  - Creator reputation scoring
  - User feedback mechanism
  - Content quality metrics
  - Verification request and review process

## Technical Implementation Guidelines

### Data Models
```swift
struct GeoTag {
    var latitude: Double
    var longitude: Double
    var radius: Double
    var locationName: String
}

struct ContextBubble {
    var timestamp: TimeInterval
    var content: String
    var type: BubbleType
    var sourceReference: String?
}

struct Thread {
    var id: String
    var contributors: [User]
    var segments: [VideoSegment]
    var topic: String
}

struct ContentFlag {
    var type: FlagType
    var confidence: Double
    var timestamp: Date
    var reviewStatus: ReviewStatus
}

struct CreatorVerification {
    var status: VerificationStatus
    var badges: [Badge]
    var reputationScore: Double
    var verificationDate: Date?
}
```

### Feature Dependencies
- CoreLocation Framework
- MapKit
- Firebase ML Kit
- AVFoundation
- CloudKit (for collaboration)

### Security Requirements
- Location data encryption
- Content verification signatures
- Secure collaborative editing
- AI model input validation
- User verification data protection

### Performance Guidelines
- Geo-search optimization
- Context bubble rendering performance
- Thread synchronization efficiency
- AI moderation response time
- Verification system scalability



